# EMBEDDED SERVER CONFIGURATION
server.port=8010
#数据源配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/star?allowMultiQueries=true&autoReconnect=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
########################################### Druid #####################################
# 初始化大小，最小，最大
# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
spring.datasource.initialSize=10
# 最小连接池数量
spring.datasource.minIdle=10
# 最大连接池数量
spring.datasource.maxActive=20
# 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，
#如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.datasource.maxWait=60000
# 有两个含义：
# 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
# 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明  单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 连接保持空闲而不被驱逐的最小时间  单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=100000
# 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
# 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.datasource.validationQuery=SELECT 1
# 检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法 单位：秒
spring.datasource.validationQueryTimeout=1
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，
# 如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.testWhileIdle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.testOnBorrow=true
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
# PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall
spring.datasource.stat.mergeSql=true
spring.datasource.stat.slowSqlMillis=3000
spring.datasource.stat.logSlowSql=true
# 通过connectProperties属性来打开mergeSql功能
spring.datasource.connectionProperties=druid.stat.mergeSql=true
spring.datasource.removeAbandoned=false
# 对于建立时间超过removeAbandonedTimeout的连接强制关闭 (removeAbandoned = true的时候)
spring.datasource.removeAbandonedTimeout=180
spring.datasource.logAbandoned=true
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

#spring-aop
spring.aop.auto=true
#跨域开关
star.allowcor=true
#get请求允许缓存
star.allow.cache=false
########################################### REDIS (RedisProperties)#####################################
spring.redis.database=0
# server host
spring.redis.host=39.96.198.188
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=-1
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=3000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=3000
spring.redis.password=redis123
spring.redis.port=6379
#######################################mybatis Settings###################################################
mybatis.mapper.path=classpath:mybatis/*mapper/*.xml
mybatis.config.path=/mybatis/mybatis-config.xml

#去掉springboot显示自动配置信息
logging.level.org.springframework.boot.autoconfigure: ERROR 

###################################################zookeeper################################################
zookeeper.server=127.0.0.1:2181


###################################################rabbitmq#################################################
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
#并发消费者初始值
spring.rabbitmq.listener.simple.concurrency=10
#并发消费者最大值
spring.rabbitmq.listener.simple.max-concurrency=20
#每个监听者每次监听时可拉取处理的消息数量
spring.rabbitmq.listener.simple.prefetch=5

###################################################  kafka  #################################################
kafka.consumer.zookeeper.connect=39.96.198.188:2181
kafka.consumer.servers=127.0.0.1:9092
kafka.consumer.enable.auto.commit=true
kafka.consumer.session.timeout=6000
kafka.consumer.auto.commit.interval=100
kafka.consumer.auto.offset.reset=latest
kafka.consumer.topic=test
kafka.consumer.group.id=test
kafka.consumer.concurrency=10

kafka.producer.servers=127.0.0.1:9092
kafka.producer.retries=0
kafka.producer.batchSize=4096
kafka.producer.linger=1
kafka.producer.bufferMemory=40960

## dubbo springboot 配置
spring.dubbo.application.id=star-dubbo-provider
spring.dubbo.application.name=star-dubbo-provider
spring.dubbo.registry.address=zookeeper://39.96.198.188:2181
spring.dubbo.server=true
spring.dubbo.protocol.name=dubbo
spring.dubbo.protocol.port=20880